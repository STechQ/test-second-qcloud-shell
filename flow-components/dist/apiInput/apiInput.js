!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e,t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};function r(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function n(e,t,o){if("other"==o.type){if("object"!=typeof e)return;return e[t]=o.value}let r=e[t];return void 0!==r?r:e[t]="array"==o.type?[]:{}}function a(e,t){switch(e[t]){case'"':case"'":return"object";default:return"array"}}function u(e,t,o){let u=o;const c=e.length;let f,l="",s=!1;for(var i=0;i<c;i++){let o=e[i];if(s)if(f==o||"]"==o&&!f){let o;switch(f&&i++,e[i+1]){case"[":o={type:a(e,i+2)};break;case".":o={type:"object"};break;case void 0:o={type:"other",value:t};break;default:throw new Error("unexpected set msg")}u=n(u,l,o),l="",s=!1}else l+=o;else switch(o){case".":l&&(u=n(u,l,{type:"object"})),l="";break;case"[":l&&(u=n(u,l,{type:a(e,i+1)})),l="",[f,i]=r(e[i+1],i),s=!0;break;default:l+=o}}return l&&(u=n(u,l,{type:"other",value:t})),u}t.r(o),t.d(o,{default:()=>f}),e={boolean:!0,datetime:!0,enum:!0,number:!0,dataType:!0,string:!0,constant:!0},Object.keys(e);const c=function(e,t,o){switch(e.type){case"context":if(null==t)return;u(e.value,t,o.context);break;case"output":o.output=o.output||{},e.value?u(e.value,t,o.output):Object.keys(t).forEach((e=>o.output[e]=t[e]))}},f=e=>{const t=e.flow.getServer();if(!t)throw new Error("apiInput can not execute on environments without server");const{pathVars:o,headers:r,body:n,queryParams:a}=e.props;if(o){const r=t.getPath().split("/").filter((e=>""!=e));o.forEach(((t,o)=>{if("string"==typeof t){if(t!=r[o])return void e.flow.stop()}else e.flow.evalSet(t,r[o],c)}))}if(a){const o=t.getQueryParameters();a.forEach((t=>{const r=o[t.key];null!=r&&e.flow.evalSet(t.value,"string"==typeof r?r:r[0],c)}))}if(r){const o=t.getHeaders();r.forEach((t=>{const r=o[t.key];null!=r&&e.flow.evalSet(t.value,"string"==typeof r?r:r[0],c)}))}if(n){const o=t.getBody();if(null==o)throw new Error("Request Body is empty, can not retrieve body from input");n.forEach((t=>{const r=t.field?o[t.field]:o;e.flow.evalSet(t.target,r,c)}))}e.flow.next()};return o})()));