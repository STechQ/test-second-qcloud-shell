"use strict";exports.id=7597,exports.ids=[7597],exports.modules={7597:(e,r,t)=>{t.r(r),t.d(r,{fromIni:()=>c});var n=t(1815),o=t(8585);const i=e=>Boolean(e)&&"object"==typeof e&&"string"==typeof e.aws_access_key_id&&"string"==typeof e.aws_secret_access_key&&["undefined","string"].indexOf(typeof e.aws_session_token)>-1&&["undefined","string"].indexOf(typeof e.aws_account_id)>-1,s=(e,r)=>(r?.logger?.debug("@aws-sdk/credential-provider-ini - resolveStaticCredentials"),Promise.resolve({accessKeyId:e.aws_access_key_id,secretAccessKey:e.aws_secret_access_key,sessionToken:e.aws_session_token,...e.aws_credential_scope&&{credentialScope:e.aws_credential_scope},...e.aws_account_id&&{accountId:e.aws_account_id}})),a=async(e,r,c,l={})=>{const d=r[e];if(Object.keys(l).length>0&&i(d))return s(d,c);if(((e,{profile:r="default",logger:t}={})=>Boolean(e)&&"object"==typeof e&&"string"==typeof e.role_arn&&["undefined","string"].indexOf(typeof e.role_session_name)>-1&&["undefined","string"].indexOf(typeof e.external_id)>-1&&["undefined","string"].indexOf(typeof e.mfa_serial)>-1&&(((e,{profile:r,logger:t})=>{const n="string"==typeof e.source_profile&&void 0===e.credential_source;return n&&t?.debug?.(`    ${r} isAssumeRoleWithSourceProfile source_profile=${e.source_profile}`),n})(e,{profile:r,logger:t})||((e,{profile:r,logger:t})=>{const n="string"==typeof e.credential_source&&void 0===e.source_profile;return n&&t?.debug?.(`    ${r} isCredentialSourceProfile credential_source=${e.credential_source}`),n})(e,{profile:r,logger:t})))(d,{profile:e,logger:c.logger}))return(async(e,r,i,s={})=>{i.logger?.debug("@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)");const c=r[e];if(!i.roleAssumer){const{getDefaultRoleAssumer:e}=await t.e(8565).then(t.bind(t,8565));i.roleAssumer=e({...i.clientConfig,credentialProviderLogger:i.logger,parentClientConfig:i?.parentClientConfig},i.clientPlugins)}const{source_profile:l}=c;if(l&&l in s)throw new o.mV(`Detected a cycle attempting to resolve credentials for profile ${(0,n.Jl)(i)}. Profiles visited: `+Object.keys(s).join(", "),{logger:i.logger});i.logger?.debug("@aws-sdk/credential-provider-ini - finding credential resolver using "+(l?`source_profile=[${l}]`:`profile=[${e}]`));const d=l?a(l,{...r,[l]:{...r[l],role_arn:c.role_arn??r[l].role_arn}},i,{...s,[l]:!0}):(await((e,r,n)=>{const i={EcsContainer:async e=>{const{fromHttp:r}=await t.e(5034).then(t.bind(t,5034)),{fromContainerMetadata:i}=await t.e(7318).then(t.bind(t,7318));return n?.debug("@aws-sdk/credential-provider-ini - credential_source is EcsContainer"),(0,o.tS)(r(e??{}),i(e))},Ec2InstanceMetadata:async e=>{n?.debug("@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata");const{fromInstanceMetadata:r}=await t.e(7318).then(t.bind(t,7318));return r(e)},Environment:async e=>{n?.debug("@aws-sdk/credential-provider-ini - credential_source is Environment");const{fromEnv:r}=await Promise.resolve().then(t.bind(t,8978));return r(e)}};if(e in i)return i[e];throw new o.mV(`Unsupported credential source in profile ${r}. Got ${e}, expected EcsContainer or Ec2InstanceMetadata or Environment.`,{logger:n})})(c.credential_source,e,i.logger)(i))(),f={RoleArn:c.role_arn,RoleSessionName:c.role_session_name||`aws-sdk-js-${Date.now()}`,ExternalId:c.external_id,DurationSeconds:parseInt(c.duration_seconds||"3600",10)},{mfa_serial:u}=c;if(u){if(!i.mfaCodeProvider)throw new o.mV(`Profile ${e} requires multi-factor authentication, but no MFA code callback was provided.`,{logger:i.logger,tryNextLink:!1});f.SerialNumber=u,f.TokenCode=await i.mfaCodeProvider(u)}const g=await d;return i.roleAssumer(g,f)})(e,r,c,l);if(i(d))return s(d,c);if(f=d,Boolean(f)&&"object"==typeof f&&"string"==typeof f.web_identity_token_file&&"string"==typeof f.role_arn&&["undefined","string"].indexOf(typeof f.role_session_name)>-1)return(async(e,r)=>t.e(5493).then(t.bind(t,5493)).then((({fromTokenFile:t})=>t({webIdentityTokenFile:e.web_identity_token_file,roleArn:e.role_arn,roleSessionName:e.role_session_name,roleAssumerWithWebIdentity:r.roleAssumerWithWebIdentity,logger:r.logger,parentClientConfig:r.parentClientConfig})())))(d,c);var f;if((e=>Boolean(e)&&"object"==typeof e&&"string"==typeof e.credential_process)(d))return(async(e,r)=>t.e(3638).then(t.bind(t,3638)).then((({fromProcess:t})=>t({...e,profile:r})())))(c,e);if((e=>e&&("string"==typeof e.sso_start_url||"string"==typeof e.sso_account_id||"string"==typeof e.sso_session||"string"==typeof e.sso_region||"string"==typeof e.sso_role_name))(d))return await(async(e,r={})=>{const{fromSSO:n}=await t.e(3449).then(t.bind(t,3449));return n({profile:e,logger:r.logger})()})(e,c);throw new o.mV(`Could not resolve credentials using profile: [${e}] in configuration/credentials file(s).`,{logger:c.logger})},c=(e={})=>async()=>{e.logger?.debug("@aws-sdk/credential-provider-ini - fromIni");const r=await(0,n.MX)(e);return a((0,n.Jl)(e),r,e)}},8585:(e,r,t)=>{t.d(r,{mV:()=>o,kb:()=>n,tS:()=>i,f$:()=>s,HP:()=>a});class n extends Error{constructor(e,r=!0){let t,o=!0;"boolean"==typeof r?(t=void 0,o=r):null!=r&&"object"==typeof r&&(t=r.logger,o=r.tryNextLink??!0),super(e),this.name="ProviderError",this.tryNextLink=o,Object.setPrototypeOf(this,n.prototype),t?.debug?.(`@smithy/property-provider ${o?"->":"(!)"} ${e}`)}static from(e,r=!0){return Object.assign(new this(e.message,r),e)}}class o extends n{constructor(e,r=!0){super(e,r),this.name="CredentialsProviderError",Object.setPrototypeOf(this,o.prototype)}}const i=(...e)=>async()=>{if(0===e.length)throw new n("No providers in chain");let r;for(const t of e)try{return await t()}catch(e){if(r=e,e?.tryNextLink)continue;throw e}throw r},s=e=>()=>Promise.resolve(e),a=(e,r,t)=>{let n,o,i,s=!1;const a=async()=>{o||(o=e());try{n=await o,i=!0,s=!1}finally{o=void 0}return n};return void 0===r?async e=>(i&&!e?.forceRefresh||(n=await a()),n):async e=>(i&&!e?.forceRefresh||(n=await a()),s?n:t&&!t(n)?(s=!0,n):r(n)?(await a(),n):n)}},1815:(e,r,t)=>{t.d(r,{Jl:()=>a,Zl:()=>P,MX:()=>I});var n=t(2037),o=t(1017);const i={},s=()=>{const{HOME:e,USERPROFILE:r,HOMEPATH:t,HOMEDRIVE:s=`C:${o.sep}`}=process.env;if(e)return e;if(r)return r;if(t)return`${s}${t}`;const a=process&&process.geteuid?`${process.geteuid()}`:"DEFAULT";return i[a]||(i[a]=(0,n.homedir)()),i[a]},a=e=>e.profile||process.env.AWS_PROFILE||"default";t(6113);var c=t(7147);const{readFile:l}=c.promises;var d,f,u,g,p,_,y,w;!function(e){e.HEADER="header",e.QUERY="query"}(d||(d={})),function(e){e.HEADER="header",e.QUERY="query"}(f||(f={})),function(e){e.HTTP="http",e.HTTPS="https"}(u||(u={})),function(e){e.MD5="md5",e.CRC32="crc32",e.CRC32C="crc32c",e.SHA1="sha1",e.SHA256="sha256"}(g||(g={})),function(e){e[e.HEADER=0]="HEADER",e[e.TRAILER=1]="TRAILER"}(p||(p={})),(w=_||(_={})).PROFILE="profile",w.SSO_SESSION="sso-session",w.SERVICES="services",function(e){e.HTTP_0_9="http/0.9",e.HTTP_1_0="http/1.0",e.TDS_8_0="tds/8.0"}(y||(y={}));const h=e=>Object.entries(e).filter((([e])=>{const r=e.indexOf(A);return-1!==r&&Object.values(_).includes(e.substring(0,r))})).reduce(((e,[r,t])=>{const n=r.indexOf(A);return e[r.substring(0,n)===_.PROFILE?r.substring(n+1):r]=t,e}),{...e.default&&{default:e.default}}),m=()=>process.env.AWS_CONFIG_FILE||(0,o.join)(s(),".aws","config"),v=()=>process.env.AWS_SHARED_CREDENTIALS_FILE||(0,o.join)(s(),".aws","credentials"),b=/^([\w-]+)\s(["'])?([\w-@\+\.%:/]+)\2$/,E=["__proto__","profile __proto__"],C=e=>{const r={};let t,n;for(const o of e.split(/\r?\n/)){const e=o.split(/(^|\s)[;#]/)[0].trim();if("["===e[0]&&"]"===e[e.length-1]){t=void 0,n=void 0;const r=e.substring(1,e.length-1),o=b.exec(r);if(o){const[,e,,r]=o;Object.values(_).includes(e)&&(t=[e,r].join(A))}else t=r;if(E.includes(r))throw new Error(`Found invalid profile name "${r}"`)}else if(t){const i=e.indexOf("=");if(![0,-1].includes(i)){const[s,a]=[e.substring(0,i).trim(),e.substring(i+1).trim()];if(""===a)n=s;else{n&&o.trimStart()===o&&(n=void 0),r[t]=r[t]||{};const e=n?[n,s].join(A):s;r[t][e]=a}}}}return r},{readFile:O}=c.promises,S={},k=(e,r)=>(S[e]&&!r?.ignoreCache||(S[e]=O(e,"utf8")),S[e]),R=()=>({}),A=".",P=async(e={})=>{const{filepath:r=v(),configFilepath:t=m()}=e,n=s();let i=r;r.startsWith("~/")&&(i=(0,o.join)(n,r.slice(2)));let a=t;t.startsWith("~/")&&(a=(0,o.join)(n,t.slice(2)));const c=await Promise.all([k(a,{ignoreCache:e.ignoreCache}).then(C).then(h).catch(R),k(i,{ignoreCache:e.ignoreCache}).then(C).catch(R)]);return{configFile:c[0],credentialsFile:c[1]}},I=async e=>{const r=await P(e);return((...e)=>{const r={};for(const t of e)for(const[e,n]of Object.entries(t))void 0!==r[e]?Object.assign(r[e],n):r[e]=n;return r})(r.configFile,r.credentialsFile)}}};