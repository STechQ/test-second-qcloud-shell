!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e,t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};function n(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function r(e,t){if(null!=e)return e[t]}function u(e,t){let o=t;const u=e.length;let a,s="",c=!1;for(var l=0;l<u;l++){let t=e[l];if(c)a==t||"]"==t&&!a?(a&&l++,o=r(o,s),s="",c=!1):s+=t;else switch(t){case".":s&&(o=r(o,s)),s="";break;case"[":s&&(o=r(o,s)),s="",[a,l]=n(e[l+1],l),c=!0;break;default:s+=t}}return s&&(o=r(o,s)),o}t.r(o),t.d(o,{default:()=>s}),e={boolean:!0,datetime:!0,enum:!0,number:!0,dataType:!0,string:!0,constant:!0},Object.keys(e);const a=function(e,t){switch(null==e?void 0:e.type){case"boolean":return"true"==e.value;case"input":return u(e.value,t.input);case"context":return u(e.value,t.context);case"output":return u(e.value,t.output);case"constant":return u(e.value,t.constantsWId);case"number":return Number(e.value);case"string":case"enum":return e.value;case"literal":return function(e,t){const o=t,n=Object.create(null),r=Object.keys(t),u=r.map((e=>o[e]?o[e]:void 0));let a=`return \`${e}\`;`;return new Function("window","global","globalThis",...r,"document","XMLHttpRequest","fetch","setInterval","navigator",a).apply(n,[n,n,n,...u,void 0,void 0,void 0,void 0,void 0])}(e.value,t);case"notSet":return}},s=e=>{const t=e.flow.getServer();if(!t)throw new Error("apiOutput can not execute on environments without server");const{statusCode:o,headers:n,body:r}=e.props,u=Number(e.flow.evalGet(o,a));if(!u)throw new Error("apiOutput status must be a positive number");let s,c;n&&(s=Object.keys(n).reduce(((t,o)=>{const r=e.flow.evalGet(n[o],a);return void 0===r||(t[o]=r.toString()),t}),{})),r&&(c=e.flow.evalGet(r,a)),t.writeResponse({statusCode:u,body:c,headers:s}),e.flow.next()};return o})()));